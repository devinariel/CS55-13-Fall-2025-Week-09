name: CI - Hosting verify

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Create preview channel
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          CHANNEL=$(firebase hosting:channel:deploy preview --json | jq -r '.result.name')
          echo "CHANNEL=$CHANNEL" >> $GITHUB_ENV

      - name: Set hosting secrets
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          # Secrets must be registered in the project first; set values from GitHub secrets
          firebase apphosting:secrets:set NEXT_PUBLIC_FIREBASE_API_KEY --data "$NEXT_PUBLIC_FIREBASE_API_KEY" || true
          firebase apphosting:secrets:set DATABASE_PASSWORD --data "$DATABASE_PASSWORD" || true

      - name: Wait for preview URL
        run: |
          PREVIEW_URL=$(firebase hosting:channel:open $CHANNEL --json | jq -r '.result.url')
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

      - name: Verify env via endpoint
        env:
          VERIFY_TOKEN: ${{ secrets.VERIFY_TOKEN }}
          PREVIEW_URL: ${{ env.PREVIEW_URL }}
        run: |
          echo "Verifying $PREVIEW_URL/api/verify-env"
          curl -sS -H "x-verify-token: $VERIFY_TOKEN" "$PREVIEW_URL/api/verify-env" | jq .

      - name: Close preview channel
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase hosting:channel:close $CHANNEL --json || true
